+ "StaysOnTop"          Pick (CirculateHit) Layer 0 6
+ "StaysPut"            Pick (CirculateHit) Layer 0 4
+ "StaysOnBottom"       Pick (CirculateHit) Layer 0 2

+ "Desk 2"	MoveToDesk 0 2
+ "Page (0,0)"	MoveToPage 0 0

Mouse 1	T    A RaiseMoveX Move Maximize
Mouse 1	R    A Menu MenuFvwmRoot
Mouse 2	R    A WindowList
Mouse 3	R    A Menu MenuWindowOpsLong
Mouse 1	I    A RaiseMoveX Move "Iconify off"

ButtonStyle All - Clear
ButtonStyle 1 - MwmDecorMenu
ButtonStyle 4 - MwmDecorMax
ButtonStyle 6 - MwmDecorMin

# This function will toggle if fvwm shows the TitleBar.
DestroyFunc ToggleTitle
AddToFunc   ToggleTitle
+ I ThisWindow (State 1) WindowStyle Title
+ I TestRc (Match) State 1 False
+ I TestRc (Match) Break
+ I WindowStyle !Title
+ I State 1 True


DestroyFunc RaiseMoveX
AddToFunc RaiseMoveX
+ I Raise
+ M $0
+ D $1

DestroyFunc RaiseMove
AddToFunc RaiseMove
+ I Raise
+ M $0

DestroyFunc MoveToCurrent
AddToFunc MoveToCurrent
+ I ThisWindow MoveToPage
+ I ThisWindow MoveToDesk


# 5: Mouse and Key bindings
#
# Contexts:
#     R = Root Window                 rrrrrrrrrrrrrrrrrrrrrr
#     W = Application Window          rIrrrr<---------^rrrrr
#     F = Frame Corners               rrrrrr[13TTTT642]rrrrr
#     S = Frame Sides                 rIrrrr[wwwwwwwww]rrrrr
#     T = Title Bar                   rrrrrr[wwwwwwwww]rrrrr
#     I = Icon                        rIrrrrv_________>rrrrr
#                                     rrrrrrrrrrrrrrrrrrrrrr
#
#     Numbers are buttons: [1 3 5 7 9  TTTTT  0 8 6 4 2]
#
# Modifiers: (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing
#
# Format: Key <X>  <Context> <Modifier> <Action>
#         Mouse <X> <Context> <Modifier> <Action>
  Mouse 	8	R 	A       PickWindow		


# Startup Sript
  DestroyFunc InitFunction
  AddToFunc InitFunction
 	+ I Test (F $[FVWM_USERDIR]/autostart)\
		Exec exec /bin/sh $[FVWM_USERDIR]/autostart

# Alt + Tab Cycles between windows 
Key 		Tab 	A 	M 	Next (CurrentPage, !Iconic, !Shaded, AcceptsFocus) CirculateFocus
Key 		Tab 	A 	SM 	Prev (CurrentPage, !Iconic, !Shaded, AcceptsFocus) CirculateFocus


#Key Tab A M Menu MenuWindowList Root c c
Key Tab A M WindowList Root c c CurrentDesk, NoGeometry, CurrentAtEnd, IconifiedAtEnd


# Super-Shift + Arrow tiles window to screen quarter
  Key 		Up     	A 	S4 	TileTopLeft


# Ctrl-Super + Arrow resizes window by 10 lines 
  Key 		Left  	A 	C4 	DecHorizontalSize

https://docs.huihoo.com/homepage/shredderyin/fvwm_frame.html 
https://github.com/DavidAlphaFox/fvwm_dots/blob/master/sehnsucht_dots/fvwm/config
# XF86/Fn Keyboard Symbols bindings
  Key XF86AudioMute 	   A N Exec exec mixer -f dev/mixer vol 0:0 > /dev/null 2>&1
  Key XF86AudioLowerVolume A N Exec exec mixer -f /dev/mixer vol -5:-5 > /dev/null 2>&1
  Key XF86AudioRaiseVolume A N Exec exec mixer -f /dev/mixer vol +5:+5 > /dev/null 2>&1
  Key XF86AudioPlay        A N Exec exec mpc play > /dev/null 2>&1
  Key XF86AudioStop        A N Exec exec mpc pause > /dev/null 2>&1
  Key XF86AudioPrev        A N Exec exec mpc prev > /dev/null 2>&1
  Key XF86AudioNext        A N Exec exec mpc next > /dev/null 2>&1
  key XF86WWW              A N Exec exec seamonkey
  key XF86Terminal         A N Exec exec urxvtc -pe tabbed
  key XF86Go               A N Exec exec rofi -show run
  Key XF86Mail             A N Exec exec sylpheed
  Key XF86HomePage         A N Exec exec pcmanfm
  Key XF86Sleep            A N Exec exec acpiconf -s3 > /dev/null 2>&1
  Key XF86LogOff           A N Exec exec xscreensaver-command -lock


Key Print A A Exec $[scripts]/screeny


+	"&Files"%devices/hdd_mount.png%									Popup MenuDisk
Mouse 1		T	N	TransitMove



SetEnv fvwm_cache $[HOME]/.fvwm.cache
SetEnv fvwm_userdir $[HOME]/.fvwm
SetEnv fvwm_images $[fvwm_userdir]/images
SetEnv fvwm_wallpaper $[fvwm_userdir]/images/wallpapers/4800x3600-haven-i-see-stars.png
Setenv fvwm_colors $[HOME]/.fvwm/images/colors
ModulePath $[fvwm_userdir]:$[fvwm_userdir]/modules:+


SetEnv FVWM_TERMINAL xterm
SetEnv FVWM_EDITOR gvim
SetEnv FVWM_BROWSER chromium
SetEnv FVWM_FILER pcmanfm
SetEnv FVWM_AUDIO deadbeef
SetEnv FVWM_VIDEO vlc
SetEnv FVWM_DOCK_ICON_SIZE 48
SetEnv FVWM_DESKTOP_MAX 8
SetEnv FVWM_FONT_NAME sans
SetEnv FVWM_FONT_SIZE 7.5
SetEnv FVWM_ICON_SIZE 48
SetEnv FVWM_PANEL_HEIGHT 24
SetEnv FVWM_PANEL_DARK false
SetEnv FVWM_THUMBNAIL_SIZE 128
SetEnv FVWM_BACKGROUNDS '$[HOME]/.backgrounds'
#PipeRead 'echo SetEnv FVWM_STRUT_LEFT $(($[FVWM_ICON_SIZE]+20))'
#SetEnv FVWM_STRUT_RIGHT 10
#PipeRead 'echo SetEnv FVWM_STRUT_TOP $(($[FVWM_PANEL_HEIGHT]+10))'
#SetEnv FVWM_STRUT_BOTTOM 10
SetEnv FVWM_FONT 'xft:$[FVWM_FONT_NAME]:size=$[FVWM_FONT_SIZE]:bold:antialias=True'

SetEnv FVWM_CLOSE_BUTTON 2
SetEnv FVWM_MAXIMIZE_BUTTON 4
SetEnv FVWM_MINIMIZE_BUTTON 6




# ===========================================================================
# Cursor Styles
# ===========================================================================

CursorStyle DEFAULT left_ptr
CursorStyle MENU left_ptr
CursorStyle TITLE left_ptr
CursorStyle WAIT watch

BusyCursor Read off




###########
SetEnv fvwm_home ~/.fvwm
SetEnv fvwm_scrpt ~/.fvwm/scripts
SetEnv fvwm_themes ~/.fvwm/themes
SetEnv fvwm_icon /usr/share/icons/wm-icons

SetEnv fvwm_font -*-terminus-medium-r-*-*-12-*-*-*-*-*-*-*
SetEnv fvwm_small_font -*-fixed-*-*-*-*-7-*-*-*-*-*-*-*
SetEnv fvwm_tiny_font -*-fixed-*-*-*-*-6-*-*-*-*-*-*-*
SetEnv fvwm_terminal_font xft:terminus:pixelsize=18
SetEnv fvwm_default_font -*-terminus-medium-r-*-*-16-*-*-*-*-*-*-*
SetEnv fvwm_times_font -*-times-*-r-*-*-12-*-*-*-*-*-*-*
SetEnv fvwm_title_font Shadow=2:-*-terminus-bold-r-*-*-18-*-*-*-*-*-*-*
SetEnv fvwm_menu_font Shadow=1:-*-terminus-medium-r-*-*-16-*-*-*-*-*-*-*


Style * Font $[fvwm_default_font]
DefaultFont $[fvwm_default_font]







# Recall that mouse formats look like this:
#
# +------------+
# | ||  ||  || |
# |            |
# +------------+
#   1   2   3

# Binding Functions
#
# "I" stands for Immediate
# "M" stands for Motion
# "C" stands for Click
# "H" stands for Hold
# "D" stands for Double Click

# -------------------------------------------------------------
# Contexts:
#     R = Root Window                 rrrrrrrrrrrrrrrrrrrrrr
#     W = Application Window          rIrrrrFSSSSSSSSSFrrrrr
#     F = Frame Corners               rrrrrrS13TTTT642Srrrrr
#     S = Frame Sides                 rIrrrrSwwwwwwwwwSrrrrr
#     T = Title Bar                   rrrrrrSwwwwwwwwwSrrrrr
#     I = Icon                        rIrrrrFSSSSSSSSSFrrrrr
#                                     rrrrrrrrrrrrrrrrrrrrrr
# Numbers are buttons: 1 3 5 7 9   0 8 6 4 2
#
# Modifiers: (A)ny, (C)ontrol, (S)hift, (M)eta, (N)othing
# -------------------------------------------------------------



AddToFunc SwitchWindow
+ I $[DIR] (CurrentPage, !Iconic, !Sticky) FocusRaiseAndStuff
+ I Deschedule 134000
+ I PipeRead `[ "$[DIR]" == "Prev" ] && \
	echo 'SetEnv NDIR Next' || \
	echo 'SetEnv NDIR Prev'`
+ I Schedule 700 134000 SetEnv DIR $[NDIR]


DestroyFunc DeThumbnail
AddToFunc   DeThumbnail
+ I PipeRead "echo WindowStyle IconOverride, Icon \\$\\[Icon-$[w.id]\\]"
+ I UnsetEnv Icon-$[w.id]
+ I Exec exec "rm -f /dev/shm/icon.tmp.$[w.id].png"

DestroyFunc FvwmClose
AddToFunc   FvwmClose
+ H Nop
+ M Nop
+ C Close $0 $1

DestroyFunc FvwmMaximize
AddToFunc   FvwmMaximize
+ H Nop
+ M Nop
+ C Maximize $0 $1

SetEnv kcalc "/usr/bin/kcalc"
SetEnv xkill "/usr/bin/xkill"


DestroyFunc LimitApplication
AddToFunc   LimitApplication
    + I Any ($0, CurrentDesk) FlipFocus
    + I TestRc (NoMatch) None ($0, CurrentDesk) Exec exec $0
     
AddToFunc ToggleXterm
+ I All (my_xtermwindow) Close
+ I TestRc (NoMatch) Exec xterm -T my_xtermwindow


DestroyMenu MenuFvwmWindowOps
AddToMenu MenuFvwmWindowOps
+   "Move To Desk"      Popup MenuDeskList
+   ""  Nop
+   "Shade/Unshade"     Pick WindowShade Toggle
+   "Iconify"           Pick Iconify
+   "Maximize"          Pick Maximize
+   ""  Nop
+   "Raise/Lower"       Pick RaiseLower
+   "Stick/Unstick"     Pick Stick
+   ""  Nop
+   "Identify"          Pick Module FvwmIdent
+   ""  Nop
+   "Close"             Pick Close
+   "Destroy"           Pick Destroy

DestroyFunc 	LockScreen
AddToFunc 		LockScreen
+ I Next (FvwmButtons, State 0) EdgeThickness 1
+ I Next (FvwmButtons) State 0
+ I Next (FvwmButtons, State 0) EdgeThickness 0



DestroyFunc BGC_Hide
AddToFunc BGC_Hide
+ I All (urxvt.bgc) WindowShade true
#+ I All (urxvt.bgc) MoveToDesk 0 666 
+ I All (urxvt.bgc) Iconify true 
+ I All (urxvt.bgc) WindowStyle WindowListSkip, CirculateHit
+ I None (CurrentPage, Focused) Prev (CurrentPage, !iconic, AcceptsFocus) FlipFocus


DestroyFunc RaiseMaximize
AddToFunc RaiseMaximize
+ I Raise
+ I Maximize $[*]

Key Tab A M Next (CurrentDesk !Iconic) Focus

https://github.com/mrtycho/fvwm-config/blob/master/config
https://github.com/somiaj/pyFvwm
https://github.com/abelardojarab/fvwm/blob/master/.fvwm2rc

https://forum.ubuntu.org.cn/viewtopic.php?f=168&t=320096&hilit=FVWM
Read fvwm.strokes


2.3 使用systemd-networkd替代networkmanager
systemctl stop NetworkManager
systemctl enable systemd-networkd
systemctl start systemd-networkd


(222 的 4 次方) 减 (183 的 3 次方) 减 (730 的 2 次方) 减 (18 的 4 次方) 减 (7 的 5 次方) 减 (每年天数)
(222**4) - (183**3) - (730**2) - (18**4) - (7**5) - (365)


print( (222**4) - (183**3) - (73**2) - (18**4) - (7**5) - (365) )
https://www.cnblogs.com/bu-wu-zheng-ye/p/4760919.html
# Avoid full screen window to overlap a task bar (for instance)
EwmhBaseStruts  0 0 24 0
IgnoreModifiers L25
SnapAttraction * 10


#+ I exec exec synapse
+ I exec nm-applet
#+ I Exec tint2


DestroyFunc SwitchWindows
AddToFunc   SwitchWindows
+ I Next (AcceptsFocus, CurrentDesk, CurrentPage) Focus
+ I Prev (AcceptsFocus, CurrentDesk, CurrentPage) WarpToWindow 

DestroyFunc SwitchWindows
AddToFunc   SwitchWindows
+ I Next (AcceptsFocus, CurrentDesk, CurrentPage) Focus
+ I Prev (AcceptsFocus, CurrentDesk, CurrentPage) WarpToWindow 


#MutilMedia Key
key XF86AudioLowerVolume A A Exec exec amixer set Master 5%- unmute
key XF86AudioRaiseVolume A A Exec exec amixer set Master 5%+ unmute
key XF86AudioMute A A Exec exec amixer set Master toggle
#key XF86AudioPlay A A Music-Play程序
#Key XF86AudioPause A A Music-Pause
#Use Mouse to control volumn
Mouse 4 WTSFI 4 Exec exec amixer set Master 5%+ unmute
Mouse 5 WTSFI 4 Exec exec amixer set Master 5%- unmute

# Mouse Gesture Binding
Mouse 2 T A WindowList
# Mouse gestures for pager
#Stroke N456    0   R N exec exec $[fvwm_goleft]
#Stroke N654    0   R N exec exec $[fvwm_goright]


需要安装的一些软件
图像浏览:feh
Quick Launcher:rofi
Tray:stalonetray
Terminal:Guake ,terminator

ClickTime 350   ##fvwm考虑鼠标click的时间，按下于弹出之间大于350ms，认为是hold.小于350ms就是click.
MoveThreshold 3   ##控制移动窗口和图标的拖动操作的灵敏度。 该资源值是移动操作触发前定位器按下按钮移动的像素量。 这用于防止单击或双击时的窗口和图标的移动，这里的移动是指按钮按下时无意识的指针移动。

EdgeScroll 100 100   ##定义了当你的鼠标移动到屏幕边缘的时候，屏幕滚动的百分率。这里表示鼠标移动到屏幕边缘屏幕100％的滚动到下一个屏幕。
EdgeResistance 150  150   ##EdgeResistance scrolling moving
这是用来设定当滑鼠游标碰触到萤幕的边界的时候，FVWM应该要如
何动作。scrolling 是告诉FVWM当滑鼠游标碰触到萤幕边界多少

#EdgeScroll 设置拖动窗口到桌面左右两边上时，百分之多少的桌面开始滚动切换到下一个。0表示不滚动。
#EdgeResistance scrolling moving 这是用来设定当滑鼠游标碰触到萤幕的边界的时候，FVWM应该要如何动作。scrolling 是告诉FVWM当滑鼠游标碰触到萤幕边界多少milliseconds之後，才会移动目前的工作桌面。moving则是设定当视窗超出画面多少像点之後，才要切换目前的工作桌面到别的桌面上。
#EdgeThickness 设置当 EdgeScroll 效果出现的时候，桌面的周围显示的边框线的像素。

# 窗口最小化后图标放置位置
# icons  - should go to top left
Style * IconBox 30 100 100 -15, IconFill top left
# 不要图标标题
Style * NoIconTitle
# Style * IconTitle, IndexedIconName
# Style * IconTitleColorset 3, HilightIconTitleColorset 3
# Style * IconTitleRelief 0
# !Iconifiable表示不会被最小化
# 应用程序替换图标
Style "matlab" Icon matlab.png, IconOverride
Style "eio" Icon ooo-writer.png, IconOverride
Style "emacs23" Icon gnome-emacs.png, IconOverride


# R 表示是root window，也就是整个背景萤幕。
# W 表示在视窗上面。
# T 表示在Title Bar上面，也就是显示视窗标题的地方。
# S 表示在在视窗四周的边框上面。
# F 表示在视窗的四角上面。
# I 表示在Icon上面。
# A 表示在Title Bar以外的任何地方。

# 窗体出现时尽量不挡住其它的窗体
Style * TileCascadePlacement

单独的Fn不会产生按键事件。你可以运行xev，然后按Fn+F2，看其对应了什么键，一般是以XF86开头的，比如XF86Battery、XF86ScreenSaver之类，然后直接写
Key XF86XXXXX A A DoSomething
xev
xmodmap-->
打开一个 rxvt/xterm/konsole/gnome-terminal ，或者你喜欢的 X 下的终端，在里面运行 xev ，然后会打开一个窗口，把鼠标移进去，停住鼠标后，按 a 键（按下后立即松开），会发现类似的信息：
        代码:




Mouse 2 R A StrokeFunc DrawMotion
Mouse 2 W 4 StrokeFunc DrawMotion
Stroke N852 0 A A Exec exec urxvtc
Stroke N258 0 A A JOE Firefox "firefox"
Stroke N14789 0 A A Exec exec rox
Stroke N456 0 A A GoTodesk 1 0 0 4
Stroke N654 0 A A GoTodesk -1 0 0 4
Stroke N25852 0 A A Exec exec notecase ~/note/notecase.ncd

sudo su
echo 0 > /sys/class/backlight/acpi_video0/brightness


Re: fvwm怎么轮询窗口？
#2帖子 由 eexpress » 2013-12-13 2:38
Mouse 1 R N FvwmRearrange -tile -u -mn 2 -resize -m 2 2 98 98


用Alt+Tab切换窗口
IgnoreModifiers L25              # 这是忽略 CapsLock, NumLock, ScrollLuck 以避免快捷键失效。
Key Tab A M WindowList Root c c NoDeskSort




按照原贴的思路修改了一下,下面的是个能正常工作的函数(确保State 2没有被占用)
代码： 全选

DestroyFunc SwitchWindow
AddToFunc SwitchWindow
+ I All (State 2, Maximized) Maximize off
+ I All (State 2) State 2 false
+ I Next (AcceptsFocus CurrentDesk CurrentPage !Iconic) State 2
+ I All (State 2) Focus
+ I All (State 2) ResizeMoveMaximize 80 80 10% 10%
+ I All (State 2) Raise

#使用EdgeScroll命令禁止flipping pages（鼠标不会因为接近屏幕边缘而进入相近的桌面
EdgeScroll 0 0

Mouse 1 4 A Iconify 是缩小。
Mouse 1 I A Iconify off 才是在图标上点击，恢复。


#Context: A:除过标题栏按钮外的任意区域
#  R:代表根窗口(也就是桌面)
#  T:代表标题栏
#  S:代表边框
#  F:代表窗口的四个角
#  W:代表窗口的客户区域
#  I:代表图标
#  n:
#    ##############################
#    1 3 5 7 9            0 8 6 4 2
#    ##############################
#    (0<=n<=9)窗口的标题栏上的按钮位置,靠左侧的是(1 3 5 7 9)
#    靠右侧的是(0 8 6 4 2)例如常见的MS-Windows的最小化按钮是
#    6,最大化是4,关闭是2,系统菜单是1
Swallow 这是FvwmButtons一个神奇的功能，可以把其他X程 序或者Fvwm模块吞进按钮中，比如在按键中显示Pager，时钟以及系统监控等。


x 和 y 是相对于 context-rectangle 默认位置的偏移，默认情况下 x 和 y 指的是相应内容矩形宽和长的百分比，如果数值后加上 m, 则表示要显示菜单 宽和长的百分比，如果以 p 结尾，则数值指的是像素。如果数值前有 o<N> ,则 表示在其他位移发生前先将菜单的百分之N的像素和矩形的百分之N重叠在一 起。可以用 c 表示 o50。

6.10.2 程序菜单
菜单的定义非常简单，但是如果你安装一个软件就要修改一次Fvwm的配置文件的 话，反而麻烦了，所以为了之后的不麻烦，我宁愿现在麻烦点。我要自动把安装 的软件添加到程序菜单中，必须要仰仗 update-menus 这个脚本，update-menus 依赖于menu，所以你必须安装它才能工作。另外，还要进行一行必要的设置：

打开/etc/menu-methods/fvwm，修改 rootsection=""，下次运行 update-menus 在.fvwm/下生成的menudefs.hook中的菜单就可怪挂在二 级菜单下。
通常debian仓库中的包会在/usr/share/menu目录下添加menu所需的配 置，如 果打包者没有添加或者你是手动编译安装软件，则需在此目录 下手动添 加相应的配置文件。配置文件的格式请查看手册。
要特别注意的是，update-menus在默认情况下会检查dpkg数据库的， 如果不是 通过apt或者dpkg安装的软件包，即使在此目录下添加了配 置文件，也不 会为其生成菜单，所以在fvwm2rc中要用"update-menus –nodpkgcheck"

PipeRead command [quiet] Fvwm用PipeRead 从shell命令 的输出中读入数据，如果command由多个单词构成，则要用引号括起来，从文 件目录动态创建菜单要用到此方法。如果command 后跟上Quiet关键字，当找 不到命令时不会产生告警。

$[gt.str]、$[w.id]、$[w.name] 你可能会在很多 配置文件中看到这样形式的东西，这叫做命令扩展（command expansion）， $[gt.str]根据当前Locale将str翻译成本地字符串，$[w.id]返回窗口的id， $[w.name]返回窗口的名称。详细请 man fvwm。

EWMH 是 EXTENDED WINDOW MANAGER HINTS 的缩写，不知如何 译成中文，它是一种窗口管理的标准，用来说明屏幕上窗口工作区的范围。 Fvwm是支持此标准的。如果关闭EWMH支持，则窗口工作区是整个屏幕。

DestroyFunc FuncDestroyOnHold
AddToFunc   FuncDestroyOnHold
+ C Schedule 100 Close
+ H Destroy
+ H Beep


FuncFvwmIconifyAll              ----  所有窗口最小化，显示桌面
FuncFvwmShowMessage title msg   ----  在以title为标题的对话框中显示msg
FuncFvwmWindowCreateScreenshot  ----  生成窗口快照并存在~/.fvwm/tmp文件夹下
FuncFvwmDesktopCreateScreenshot ----  生成桌面快照并存在~/.fvwm/tmp文件夹下
FuncFvwmViewInfo cmd            ----  在终端中查看命令cmd的info手册
FuncFvwmViewManPage cmd         ----  在终端中查看cmd的man手册
FuncFvwmViewFile file           ----  在终端中用less查看文件file
FuncFvwmEditFile file           ----  检查可用是编辑器并打开文件file
FuncFvwmOpenURL url             ----  检查可用的浏览器并打开链接url
FuncFvwmRunInXterm title cmd    ----  在终端中运行命令cmd


DestroyFunc AutoHide
AddToFunc   AutoHide
+ I ThisWindow ($0) Deschedule $[w.id]
+ I TestRc (!Match) Deschedule -$[w.id]
+ I ThisWindow ($0) ThisWindow (shaded) AutohideShow $1 $3
+ I TestRc (!Match) All ($0, !shaded) AutohideHide $2 $3

DestroyFunc AutohideShow
AddToFunc   AutohideShow
+ I Schedule $0 -$[w.id] WindowShade $1 off
+ I Schedule $0 -$[w.id] Raise
+ I Schedule $0 -$[w.id] Deschedule $[w.id]
+ I Schedule $0 -$[w.id] Deschedule -$[w.id]

DestroyFunc AutohideHide
AddToFunc   AutohideHide
+ I Schedule $0 $[w.id] WindowShade $1 on
+ I Schedule $0 $[w.id] Deschedule $[w.id]
+ I Schedule $0 $[w.id] Deschedule -$[w.id]

# this one originates from ikaros configs iirc
DestroyFunc FuncDockLaunch
AddToFunc   FuncDockLaunch
+ C Any ($1) Next ($1) WindowListFunc
+ C TestRc (NoMatch) Exec $0
+ H Any ($1) WindowList ($1) Rectangle +$2+$3 0 -100m CurrentAtEnd UseListSkip SortByClass NoCurrentDeskTitle
+ D Exec $0
